// src/components/AdminAuthModal.jsx
import { useState } from "react";
import { api } from "../lib/api";

// р╕Хр╣Йр╕нр╕Зр╕кр╕бр╕бр╕Хр╕┤р╕зр╣Ир╕▓р╕бр╕╡ Path р╕кр╕│р╕лр╕гр╕▒р╕Ър╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕кр╕┤р╕Чр╕Шр╕┤р╣Мр╣Бр╕нр╕Фр╕бр╕┤р╕Щ
// р╣Гр╕Щ Backend (р╣Ар╕Кр╣Ир╕Щ /auth/admin-login)
export default function AdminAuthModal({
  onClose, // р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щр╕кр╕│р╕лр╕гр╕▒р╕Ър╕Ыр╕┤р╕Ф Modal
  onSuccess, // р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щр╕Чр╕╡р╣Ир╕Ир╕░р╕Чр╕│р╕Зр╕▓р╕Щр╣Ар╕бр╕╖р╣Ир╕нр╕вр╕╖р╕Щр╕вр╕▒р╕Щр╣Бр╕нр╕Фр╕бр╕┤р╕Щр╕кр╕│р╣Ар╕гр╣Зр╕И (р╕кр╣Ир╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Бр╕нр╕Фр╕бр╕┤р╕Щр╕Чр╕╡р╣И login р╕кр╕│р╣Ар╕гр╣Зр╕Ир╕Бр╕ер╕▒р╕Ър╣Др╕Ыр╣Др╕Фр╣Й)
  title = "р╕вр╕╖р╕Щр╕вр╕▒р╕Щр╕кр╕┤р╕Чр╕Шр╕┤р╣Мр╣Бр╕нр╕Фр╕бр╕┤р╕Щ",
}) {
  const [username, setUsername] = useState("");
  const [password, setPassword] = useState("");
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);

  const handleSubmit = async (e) => {
    e.preventDefault();
    setError(null);
    setLoading(true);

    try {
┬а ┬а ┬а ┬а 
┬а ┬а ┬а ┬а const res = await api.post("/users/login", { 
┬а ┬а ┬а ┬а ┬а ┬а username,
┬а ┬а ┬а ┬а ┬а ┬а password,
┬а ┬а ┬а ┬а });

┬а ┬а ┬а // ЁЯЖХ р╕Ыр╕гр╕▒р╕Ъ Logic р╕Бр╕▓р╕гр╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ъ
┬а ┬а ┬а const user = res.data?.user;
┬а ┬а ┬а const userRole = user?.role?.toUpperCase(); // р╕Чр╕│р╣Гр╕лр╣Йр╣Ар╕Ыр╣Зр╕Щр╕Хр╕▒р╕зр╕Юр╕┤р╕бр╕Юр╣Мр╣Гр╕лр╕Нр╣Ир╣Ар╕Юр╕╖р╣Ир╕нр╣Ар╕Ыр╕гр╕╡р╕вр╕Ър╣Ар╕Чр╕╡р╕вр╕Ъ

┬а ┬а ┬а // ЁЯТб р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕зр╣Ир╕▓р╕бр╕╡ user object р╣Бр╕ер╕░ Role р╣Ар╕Ыр╣Зр╕Щ 'р╣Бр╕нр╕Фр╕бр╕┤р╕Щ' (р╣Др╕бр╣Ир╕зр╣Ир╕▓р╕Ир╕░р╕Ър╕▒р╕Щр╕Чр╕╢р╕Бр╣Ар╕Ыр╣Зр╕Щр╕ар╕▓р╕йр╕▓р╣Др╕Чр╕вр╕лр╕гр╕╖р╕н ADMIN)
┬а ┬а ┬а if (user && (userRole === "р╣Бр╕нр╕Фр╕бр╕┤р╕Щ".toUpperCase() || userRole === "ADMIN")) {
┬а ┬а ┬а ┬а onSuccess(user);
┬а ┬а ┬а ┬а onClose();
┬а ┬а ┬а } else if (user) {
┬а ┬а ┬а ┬а // р╕ер╣Зр╕нр╕Бр╕нр╕┤р╕Щр╕кр╕│р╣Ар╕гр╣Зр╕И р╣Бр╕Хр╣Ир╣Др╕бр╣Ир╣Гр╕Кр╣И Role р╣Бр╕нр╕Фр╕бр╕┤р╕Щ
┬а ┬а ┬а ┬а setError("р╕Ьр╕╣р╣Йр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щр╕Щр╕╡р╣Йр╣Др╕бр╣Ир╣Гр╕Кр╣Ир╕кр╕┤р╕Чр╕Шр╕┤р╣Мр╣Бр╕нр╕Фр╕бр╕┤р╕Щ");
┬а ┬а ┬а } else {
┬а ┬а ┬а ┬а // р╕ер╣Зр╕нр╕Бр╕нр╕┤р╕Щр╣Др╕бр╣Ир╕кр╕│р╣Ар╕гр╣Зр╕И (р╕Др╕зр╕гр╕Ир╕░р╕Цр╕╣р╕Бр╕Ир╕▒р╕Ър╣Вр╕Фр╕в catch block р╣Бр╕Хр╣Ир╣Ар╕Юр╕┤р╣Ир╕бр╣Др╕зр╣Йр╣Ар╕Юр╕╖р╣Ир╕нр╕Др╕зр╕▓р╕бр╕Ыр╕ер╕нр╕Фр╕ар╕▒р╕в)
┬а ┬а ┬а ┬а setError("р╣Др╕бр╣Ир╕Юр╕Ър╕Ьр╕╣р╣Йр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щр╣Бр╕нр╕Фр╕бр╕┤р╕Щ р╕лр╕гр╕╖р╕нр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щр╣Др╕бр╣Ир╕Цр╕╣р╕Бр╕Хр╣Йр╕нр╕З");
┬а ┬а ┬а }
      
┬а ┬а } catch (err) {
┬а ┬а ┬а console.error("Admin Auth Error:", err);
┬а ┬а ┬а // ЁЯТб р╕Ыр╕гр╕▒р╕Ър╕Вр╣Йр╕нр╕Др╕зр╕▓р╕б Error р╣Ар╕бр╕╖р╣Ир╕н Backend р╕Хр╕нр╕Ър╕Бр╕ер╕▒р╕Ър╕бр╕▓ 401/403
┬а ┬а ┬а setError(err?.response?.data?.error || "Username р╕лр╕гр╕╖р╕нр╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щр╣Др╕бр╣Ир╕Цр╕╣р╕Бр╕Хр╣Йр╕нр╕З");
┬а ┬а } finally {
┬а ┬а ┬а setLoading(false);
┬а ┬а }
┬а };

  // Minimal Modal/Popup Structure (р╣Гр╕Кр╣Й Tailwind CSS р╕Хр╕▓р╕бр╕кр╣Др╕Хр╕ер╣Мр╣Вр╕Др╣Йр╕Фр╣Ар╕Фр╕┤р╕б)
  return (
    <div
      className="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50"
      onClick={onClose}
    >
      <div
        className="bg-white p-6 rounded-lg shadow-xl w-full max-w-sm"
        onClick={(e) => e.stopPropagation()} // р╕Ыр╣Йр╕нр╕Зр╕Бр╕▒р╕Щр╕Др╕ер╕┤р╕Бр╣Гр╕Щ Modal р╣Бр╕ер╣Йр╕з Modal р╕Ыр╕┤р╕Ф
      >
        <h2 className="text-xl font-bold mb-4">{title}</h2>
        <form onSubmit={handleSubmit}>
          <div className="mb-4">
            <label className="block text-sm font-medium text-gray-700">Username р╣Бр╕нр╕Фр╕бр╕┤р╕Щ</label>
            <input
              type="text"
              className="mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2"
              value={username}
              onChange={(e) => setUsername(e.target.value)}
              required
              disabled={loading}
            />
          </div>
          <div className="mb-4">
            <label className="block text-sm font-medium text-gray-700">р╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щр╣Бр╕нр╕Фр╕бр╕┤р╕Щ</label>
            <input
              type="password"
              className="mt-1 block w-full border border-gray-300 rounded-md shadow-sm p-2"
              value={password}
              onChange={(e) => setPassword(e.target.value)}
              required
              disabled={loading}
            />
          </div>

          {error && <div className="text-red-500 text-sm mb-4">{error}</div>}

          <div className="flex justify-end space-x-3">
            <button
              type="button"
              onClick={onClose}
              className="px-4 py-2 border rounded-md text-gray-700 hover:bg-gray-100"
              disabled={loading}
            >
              р╕вр╕Бр╣Ар╕ер╕┤р╕Б
            </button>
            <button
              type="submit"
              className="px-4 py-2 rounded-md bg-slate-900 text-white hover:opacity-90 disabled:opacity-50"
              disabled={loading}
            >
              {loading ? "р╕Бр╕│р╕ер╕▒р╕Зр╕вр╕╖р╕Щр╕вр╕▒р╕Щ..." : "р╕вр╕╖р╕Щр╕вр╕▒р╕Щ"}
            </button>
          </div>
        </form>
      </div>
    </div>
  );
}