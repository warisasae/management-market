import Sidebar from "./Sidebar";
import { Outlet, useNavigate } from "react-router-dom";
import { useEffect, useState } from "react";
import { api } from "../lib/api";
import { AUTH_KEY, getCurrentUser, setAuth, clearAuth, saveCurrentUser } from "../lib/auth";

const RAW = (import.meta.env.VITE_API_BASE ?? "http://localhost:4000").trim();
const API_BASE = RAW.replace(/\/+$/, "");

function resolveUrl(u) {
  if (!u) return "";
  return /^https?:\/\//i.test(u) ? u : `${API_BASE}${u.startsWith("/") ? "" : "/"}${u}`;
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÉ‡∏ô Local Storage
function mergeSetAuthUser(nextUser) {
  const cur = getCurrentUser() || {};
  const mergedUser = { ...cur, ...(nextUser || {}) }; 
  // ‡πÉ‡∏ä‡πâ saveCurrentUser ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏ô lib/auth.js ‡πÅ‡∏•‡πâ‡∏ß
  saveCurrentUser(mergedUser);
}

export default function Layout() {
  const [user, setUser] = useState(() => getCurrentUser());
  const navigate = useNavigate();
  // ‚≠êÔ∏è ‡πÄ‡∏û‡∏¥‡πà‡∏° State ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Cache Buster: ‡πÉ‡∏ä‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô URL ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
  const [cacheBuster, setCacheBuster] = useState(Date.now()); 

  // ‚≠êÔ∏è ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà: ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï State ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô Layout ‡πÅ‡∏•‡∏∞ Sidebar
  const handleUserUpdate = () => {
      const updatedUser = getCurrentUser();
      setUser(updatedUser);
      setCacheBuster(Date.now()); // ‚≠êÔ∏è ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï cache buster ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
  }

  useEffect(() => {
    let alive = true;
    (async () => {
      try {
        const r = await api.get("/auth/me", { validateStatus: s => s >= 200 && s < 500 });
        if (!alive) return;

        const me = r.data?.user || null;
        if (!me) {
          clearAuth();
          if (window.location.pathname !== "/login") navigate("/login", { replace: true });
          return;
        }

        // 1. ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏´‡∏•‡∏±‡∏Å‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å /auth/me
        mergeSetAuthUser(me);
        setUser(me);

        // ‡πÄ‡∏ï‡∏¥‡∏° image_url ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ (‡πÇ‡∏Ñ‡πâ‡∏î‡∏ô‡∏µ‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ)
        if (me.user_id && !me.image_url) {
          try {
            const uRes = await api.get(`/users/${encodeURIComponent(me.user_id)}`, {
              validateStatus: s => s >= 200 && s < 500,
            });
            if (!alive) return;
            if (uRes.status === 200 && uRes.data) {
              const withImg = { ...me, image_url: uRes.data.image_url || null };
              mergeSetAuthUser(withImg);
              setUser(withImg);
              setCacheBuster(Date.now()); // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏î‡πâ‡∏£‡∏π‡∏õ‡∏°‡∏≤
            }
          } catch {}
        }
      } catch {
        clearAuth();
        if (window.location.pathname !== "/login") navigate("/login", { replace: true });
      }
    })();
    return () => { alive = false; };
  }, [navigate]);

  // Sync ‡∏Å‡∏±‡∏ö Local Storage (‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡πÅ‡∏ó‡πá‡∏ö‡∏≠‡∏∑‡πà‡∏ô‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï)
  useEffect(() => {
    const onStorage = (e) => {
      if (e.key === AUTH_KEY) handleUserUpdate(); // ‚≠êÔ∏è ‡πÉ‡∏ä‡πâ handleUserUpdate ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï State
    };
    window.addEventListener("storage", onStorage);
    return () => window.removeEventListener("storage", onStorage);
  }, []);

  // ‚≠êÔ∏è ‡∏•‡∏ö: ‡πÇ‡∏Ñ‡πâ‡∏î‡∏ó‡∏µ‡πà‡∏ü‡∏±‡∏á window.addEventListener("auth:user-updated") ‡∏≠‡∏≠‡∏Å
  // ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏£‡∏≤‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÑ‡∏õ‡πÉ‡∏ä‡πâ Outlet Context ‡πÅ‡∏•‡∏∞ Local Storage 'storage' event ‡πÅ‡∏•‡πâ‡∏ß

  const name = user?.name || user?.username || "‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ";
  const rawImage = user?.image_url || "";
  // ‚≠êÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç: ‡πÄ‡∏û‡∏¥‡πà‡∏° cache buster (timestamp) ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô URL
  const profileImage = rawImage ? `${resolveUrl(rawImage)}?v=${cacheBuster}` : "";

  return (
    <div className="h-screen flex flex-col font-sans">
      <header className="bg-[#C80036] shadow p-4 flex items-center justify-between">
        <div className="mb-4 px-2">
          <div className="text-white font-bold text-lg">‡∏£‡πâ‡∏≤‡∏ô‡∏£‡∏∞‡∏Ü‡∏±‡∏á‡∏ó‡∏≠‡∏á</div>
          <div className="text-white/80 text-xs">GROCERY STORE</div>
        </div>
        <div className="flex items-center space-x-4">
          <p className="text-sm text-green-600 bg-white border border-green-200 rounded-[25px] px-3 py-1">
            üü¢ ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
          </p>
          <button
            onClick={() => navigate("/dashboard/profile/edit")}
            className="p-2 rounded-full hover:bg-white/20 transition"
            title="‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô"
          >
            <svg xmlns="http://www.w3.org/2000/svg" className="w-6 h-6 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor" strokeWidth={2}>
              <path strokeLinecap="round" strokeLinejoin="round" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.89 3.39.956 2.5 2.5a1.724 1.724 0 001.066 2.573c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.89 1.543-.956 3.39-2.5 2.5a1.724 1.724 0 00-2.573 1.066c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.89-3.39-.956-2.5-2.5a1.724 1.724 0 00-1.066-2.573c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.89-1.543.956-3.39 2.5-2.5.996.573 2.146.15 2.573-1.066z" />
              <circle cx="12" cy="12" r="3" />
            </svg>
          </button>

          {profileImage ? (
            <img
              // ‚≠êÔ∏è ‡πÉ‡∏ä‡πâ profileImage (‡∏ó‡∏µ‡πà‡∏°‡∏µ cache buster) ‡πÄ‡∏õ‡πá‡∏ô key ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÉ‡∏´‡πâ re-render
              key={profileImage} 
              src={profileImage}
              alt={name}
              className="w-10 h-10 rounded-full border border-blue-400 object-cover"
              onError={(e) => { e.currentTarget.style.display = "none"; }} // hide the image if it fails to load
            />
          ) : (
            <div className="w-10 h-10 rounded-full bg-white/20 grid place-items-center text-white font-bold border border-blue-400">
              {name.charAt(0).toUpperCase()}
            </div>
          )}
        </div>
      </header>

      <div className="flex flex-1">
        {/* ‚≠êÔ∏è ‡∏™‡πà‡∏á user state ‡πÑ‡∏õ Sidebar */}
        <Sidebar user={user} /> 
        
        <main className="flex-1 bg-[#FFF5E1] p-8 overflow-y-auto">
          {/* ‚≠êÔ∏è ‡∏™‡πà‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ú‡πà‡∏≤‡∏ô Outlet context ‡πÉ‡∏´‡πâ UserForm.jsx ‡πÉ‡∏ä‡πâ */}
          <Outlet context={{ onUserUpdate: handleUserUpdate }} /> 
        </main>
      </div>
    </div>
  );
}
