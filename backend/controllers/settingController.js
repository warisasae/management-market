import { prisma } from "../lib/prisma.js";

// ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° vatRate (‡∏õ‡∏£‡∏±‡∏ö‡πÄ‡∏•‡∏Ç‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏ä‡πâ‡∏à‡∏£‡∏¥‡∏á ‡πÄ‡∏ä‡πà‡∏ô 7)
const DEFAULTS = {
  storeName: "My Grocery",
  phone: "",
  address: "",
  openTime: "07:00",
  closeTime: "21:00",
  payCash: true,
  payPromptPay: true,
  promptpayNumber: "",
  printCopies: 1,
  vatIncluded: false,
  vatRate: 0,                 // üëà ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
  receiptFooter: "‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡∏≠‡∏∏‡∏î‡∏´‡∏ô‡∏∏‡∏ô",
  lowStockThreshold: 3,
  expiryAlertDays: 7,
  requireOpenShift: true,
  shiftFloat: 500,
};

export async function getSettings(_req, res) {
  try {
    const row = await prisma.setting.findUnique({ where: { key: "system_basic" } });
    let data = row?.value ?? DEFAULTS;
    if (typeof data === "string") { try { data = JSON.parse(data); } catch { data = DEFAULTS; } }
    // ‡πÄ‡∏ï‡∏¥‡∏°‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö (‡∏Å‡∏±‡∏ô undefined)
    data = { ...DEFAULTS, ...data };
    return res.json(data);
  } catch (e) {
    console.error(e);
    return res.status(500).json({ error: "Failed to fetch settings" });
  }
}

export async function updateSettings(req, res) {
  try {
    const payload = req.body;
    const saved = await prisma.setting.upsert({
      where: { key: "system_basic" },
      create: { key: "system_basic", value: payload },
      update: { value: payload },
    });
    let out = saved.value;
    if (typeof out === "string") { try { out = JSON.parse(out); } catch {} }
    // ‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö‡πÅ‡∏ö‡∏ö‡πÄ‡∏ï‡∏¥‡∏°‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö
    return res.json({ message: "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢", settings: { ...DEFAULTS, ...out } });
  } catch (e) {
    console.error(e);
    return res.status(500).json({ error: "Failed to update settings" });
  }
}

/** üëá NEW: ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö POS ‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏Å /api/settings/vat */
export async function getVatSettings(_req, res) {
  try {
    const row = await prisma.setting.findUnique({ where: { key: "system_basic" } });
    let data = row?.value ?? {};
    if (typeof data === "string") { try { data = JSON.parse(data); } catch { data = {}; } }
    const vatIncluded = data.vatIncluded ?? DEFAULTS.vatIncluded;
    const vatRate = data.vatRate ?? DEFAULTS.vatRate; // ‡∏õ‡∏Å‡∏ï‡∏¥ 0 ‡∏´‡∏£‡∏∑‡∏≠ 7 ‡πÅ‡∏•‡πâ‡∏ß‡πÅ‡∏ï‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏∏‡∏ì
    return res.json({ vatIncluded, vatRate });
  } catch (e) {
    console.error(e);
    return res.status(500).json({ error: "Failed to fetch VAT settings" });
  }
}
